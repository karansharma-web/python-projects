
import subprocess
import re
import pyttsx3
import datetime
import speech_recognition as sr
import wikipedia
import webbrowser
import os
import smtplib
import random
from pyowm import OWM
import wolframalpha
from gtts import gTTS
from urllib.request import urlopen
from bs4 import BeautifulSoup as soup



chromedir = "C:\\Program Files (x86)\\Google\\Chrome\\Application\\chrome.exe"
webbrowser.register('google-chrome', None,webbrowser.BackgroundBrowser(chromedir))

engine = pyttsx3.init('sapi5')
voices = engine.getProperty('voices')
# print(voices)
engine.setProperty('rate', 150)
engine.setProperty('voice', voices[0])


def speak(audio):
    engine.say(audio)
    engine.runAndWait()

# Can also play with Google GTTS

# def speak(audio):
#     print(audio)
#     tts = gTTS(text=audio, lang='en')
#     tts.save("audio.mp3")
#     os.system("audio.mp3")


def wishMe():
    hour = int(datetime.datetime.now().hour)
    if hour >= 0 and hour < 12:
        speak('Good Morning Mister Karan')

    elif hour >= 12 and hour < 17:
        speak('Good Afternoon Mister Karan')

    else:
        speak('Good Evening Mister Karan')

    # speak("Jarvis is active. Please tell me how may i help you")


def takeCommand():
    """    It takes microphone input from use and returns string output"""

    r = sr.Recognizer()
    with sr.Microphone() as source:
        print("Listening ....")
        r.pause_threshold = 2
        r.energy_threshold = 300
        audio = r.listen(source)

    try:
        print("Recognizing ...")
        asked = r.recognize_google(audio, language='en-in')
        print(f"You said : {asked}")
        

    except Exception as e:
        # print(e)
        print("Say that again please")
        return "None"

    return asked


def sendEmail(to, content):
    server = smtplib.SMTP('smtp.gmail.com', 587)
    server.ehlo()
    server.starttls()
    server.login("karan.360s@gmail.com", "spaceandtime2")
    server.sendmail("karan.360s@gmail.com", to, content)
    server.close()


if __name__ == "__main__":
    wishMe()
    while True:

        query = takeCommand().lower() #"google"
        # print(query)

        list_check = ["play", "music", "song", "songs", "gaana"]
        list_check_web = ["com", "org", "in", "gov", "co"]
        list_check_e = ["email", "mail", "send"]
        list_check_q = ["bye", "tata", "shutdown", "exit"]
        list_check_c = ["climate", "weather", "temperature"]

        # Logic to execute tasks based on query

        if 'wikipedia' in query:
            speak('Searching Wikipedia...')
            query = query.replace("wikipedia", "")

            # sentences can be changed
            results = wikipedia.summary(query, sentences=1)
            speak("According to Wikipedia")
            print(results)
            speak(results)

        elif "calculate" in query:

            app_id = "GT33PP-TJUXRPJ8UX"
            client = wolframalpha.Client(app_id)

            indx = query.split().index('calculate')
            query = query.split()[indx + 1:]
            res = client.query(' '.join(query))
            answer = next(res.results).text
            speak("The answer is " + answer)

        elif 'joke' in query or 'tell me a joke' in query:
            with open("C:\\Users\\karan\\PycharmProjects\\untitled4\\IRON MAN - Jarvis\\j.txt", "r") as f:
                jokelist = [line.rstrip('\n') for line in f.readlines()]
                speak(jokelist[random.randint(0, 49)])

        elif any(item in query for item in list_check_web):
            reg_ex = re.search('open (.+)', query)
            if reg_ex:
                domain = reg_ex.group(1)
                print(domain)
                url = 'https://www.' + domain
                webbrowser.open(url)
                speak('The website you have requested has been opened for you Sir.')
            else:
                pass

        elif 'images' in query or 'pics' in query:
            text1 = "Here are the web results for " + query
            speak(text1)
            webbrowser.get(using='google-chrome').open(f"https://www.google.com/search?tbm=isch&q={query}")
            break

        elif 'youtube' in query:
            webbrowser.get(using='google-chrome').open("youtube.com")

        elif any(item in query for item in list_check):
            music_dir = 'E:\Music'
            songs = os.listdir(music_dir)
            print(songs)
            os.startfile(os.path.join(music_dir, random.choice(songs)))

        elif 'the time' in query:
            strTime = datetime.datetime.now().strftime("%H:%M:%S")
            speak(f"Sir, the time is {strTime}")

        elif 'open code' in query or 'visual code' in query:
            vscodePath = ("C:\\Users\\karan\\AppData\\Local\\Programs\\Microsoft VS Code\\Code.exe")
            os.startfile(vscodePath)

        elif 'open chrome' in query or 'open browser' in query:
            os.startfile(chromedir)

        # elif 'launch' in query:
        #     reg_ex = re.search('launch (.*)', query)
        #     if reg_ex:
        #         appname = reg_ex.group(1)
        #         appname1 = appname+".exe"

        #         subprocess.Popen([r"C:\\windows\\system32\\" + appname1])
        #     speak('I have launched the desired application')



        if 'weather' in query:

            str = query.split(" ")
            # print(str)
            city = str[len(str)-1]
            # print(city)
            owm = OWM(API_key='ab0d5e80e8dafb2cb81fa9e82431c1fa')
            obs = owm.weather_at_place(city)
            w = obs.get_weather()
            k = w.get_status()
            x = w.get_temperature(unit='celsius')
            print('Current weather in %s is %s. The maximum temperature is %0.2f and the minimum temperature is %0.2f degree celcius' % (city, k, x['temp_max'], x['temp_min']))
            speak('Current weather in %s is %s. The maximum temperature is %0.2f and the minimum temperature is %0.2f degree celcius' % (city, k, x['temp_max'], x['temp_min']))
        


        
        elif any(item in query for item in list_check_e):
            try:
                speak("What should I write")
                content = takeCommand()
                to = 'karan.360s@gmail.com'
                sendEmail(to, content)
                speak("Email has been sent")
            except Exception as e:
                print(e)
                speak("Sorry sir, cannot send Email")


        # top stories from google news

        elif 'news' in query:
            try:
                news_url="https://news.google.com/news/rss"
                Client=urlopen(news_url)
                xml_page=Client.read()
                Client.close()
                soup_page=soup(xml_page,"xml")
                news_list=soup_page.findAll("item")
                for news in news_list[:15]:
                    print(news.title.text.encode('utf-8'))
                    speak(news.title.text.encode('utf-8'))
                
            except Exception as e:
                    print(e)


        elif any(item in query for item in list_check_q):
            speak("Have a good day sir")

            exit()
        
